{
  "version": 3,
  "sources": ["../esm/index.js"],
  "sourcesContent": ["import {\n\tV4MAPPED,\n\tADDRCONFIG,\n\tALL,\n\tpromises as dnsPromises,\n\tlookup as dnsLookup\n} from 'node:dns';\nimport {promisify} from 'node:util';\nimport os from 'node:os';\n\nconst {Resolver: AsyncResolver} = dnsPromises;\n\nconst kCacheableLookupCreateConnection = Symbol('cacheableLookupCreateConnection');\nconst kCacheableLookupInstance = Symbol('cacheableLookupInstance');\nconst kExpires = Symbol('expires');\n\nconst supportsALL = typeof ALL === 'number';\n\nconst verifyAgent = agent => {\n\tif (!(agent && typeof agent.createConnection === 'function')) {\n\t\tthrow new Error('Expected an Agent instance as the first argument');\n\t}\n};\n\nconst map4to6 = entries => {\n\tfor (const entry of entries) {\n\t\tif (entry.family === 6) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tentry.address = `::ffff:${entry.address}`;\n\t\tentry.family = 6;\n\t}\n};\n\nconst getIfaceInfo = () => {\n\tlet has4 = false;\n\tlet has6 = false;\n\n\tfor (const device of Object.values(os.networkInterfaces())) {\n\t\tfor (const iface of device) {\n\t\t\tif (iface.internal) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (iface.family === 'IPv6') {\n\t\t\t\thas6 = true;\n\t\t\t} else {\n\t\t\t\thas4 = true;\n\t\t\t}\n\n\t\t\tif (has4 && has6) {\n\t\t\t\treturn {has4, has6};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {has4, has6};\n};\n\nconst isIterable = map => {\n\treturn Symbol.iterator in map;\n};\n\nconst ignoreNoResultErrors = dnsPromise => {\n\treturn dnsPromise.catch(error => {\n\t\tif (\n\t\t\terror.code === 'ENODATA' ||\n\t\t\terror.code === 'ENOTFOUND' ||\n\t\t\terror.code === 'ENOENT' // Windows: name exists, but not this record type\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\n\t\tthrow error;\n\t});\n};\n\nconst ttl = {ttl: true};\nconst all = {all: true};\nconst all4 = {all: true, family: 4};\nconst all6 = {all: true, family: 6};\n\nexport default class CacheableLookup {\n\tconstructor({\n\t\tcache = new Map(),\n\t\tmaxTtl = Infinity,\n\t\tfallbackDuration = 3600,\n\t\terrorTtl = 0.15,\n\t\tresolver = new AsyncResolver(),\n\t\tlookup = dnsLookup\n\t} = {}) {\n\t\tthis.maxTtl = maxTtl;\n\t\tthis.errorTtl = errorTtl;\n\n\t\tthis._cache = cache;\n\t\tthis._resolver = resolver;\n\t\tthis._dnsLookup = lookup && promisify(lookup);\n\t\tthis.stats = {\n\t\t\tcache: 0,\n\t\t\tquery: 0\n\t\t};\n\n\t\tif (this._resolver instanceof AsyncResolver) {\n\t\t\tthis._resolve4 = this._resolver.resolve4.bind(this._resolver);\n\t\t\tthis._resolve6 = this._resolver.resolve6.bind(this._resolver);\n\t\t} else {\n\t\t\tthis._resolve4 = promisify(this._resolver.resolve4.bind(this._resolver));\n\t\t\tthis._resolve6 = promisify(this._resolver.resolve6.bind(this._resolver));\n\t\t}\n\n\t\tthis._iface = getIfaceInfo();\n\n\t\tthis._pending = {};\n\t\tthis._nextRemovalTime = false;\n\t\tthis._hostnamesToFallback = new Set();\n\n\t\tthis.fallbackDuration = fallbackDuration;\n\n\t\tif (fallbackDuration > 0) {\n\t\t\tconst interval = setInterval(() => {\n\t\t\t\tthis._hostnamesToFallback.clear();\n\t\t\t}, fallbackDuration * 1000);\n\n\t\t\t/* istanbul ignore next: There is no `interval.unref()` when running inside an Electron renderer */\n\t\t\tif (interval.unref) {\n\t\t\t\tinterval.unref();\n\t\t\t}\n\n\t\t\tthis._fallbackInterval = interval;\n\t\t}\n\n\t\tthis.lookup = this.lookup.bind(this);\n\t\tthis.lookupAsync = this.lookupAsync.bind(this);\n\t}\n\n\tset servers(servers) {\n\t\tthis.clear();\n\n\t\tthis._resolver.setServers(servers);\n\t}\n\n\tget servers() {\n\t\treturn this._resolver.getServers();\n\t}\n\n\tlookup(hostname, options, callback) {\n\t\tif (typeof options === 'function') {\n\t\t\tcallback = options;\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'number') {\n\t\t\toptions = {\n\t\t\t\tfamily: options\n\t\t\t};\n\t\t}\n\n\t\tif (!callback) {\n\t\t\tthrow new Error('Callback must be a function.');\n\t\t}\n\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tthis.lookupAsync(hostname, options).then(result => {\n\t\t\tif (options.all) {\n\t\t\t\tcallback(null, result);\n\t\t\t} else {\n\t\t\t\tcallback(null, result.address, result.family, result.expires, result.ttl, result.source);\n\t\t\t}\n\t\t}, callback);\n\t}\n\n\tasync lookupAsync(hostname, options = {}) {\n\t\tif (typeof options === 'number') {\n\t\t\toptions = {\n\t\t\t\tfamily: options\n\t\t\t};\n\t\t}\n\n\t\tlet cached = await this.query(hostname);\n\n\t\tif (options.family === 6) {\n\t\t\tconst filtered = cached.filter(entry => entry.family === 6);\n\n\t\t\tif (options.hints & V4MAPPED) {\n\t\t\t\tif ((supportsALL && options.hints & ALL) || filtered.length === 0) {\n\t\t\t\t\tmap4to6(cached);\n\t\t\t\t} else {\n\t\t\t\t\tcached = filtered;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcached = filtered;\n\t\t\t}\n\t\t} else if (options.family === 4) {\n\t\t\tcached = cached.filter(entry => entry.family === 4);\n\t\t}\n\n\t\tif (options.hints & ADDRCONFIG) {\n\t\t\tconst {_iface} = this;\n\t\t\tcached = cached.filter(entry => entry.family === 6 ? _iface.has6 : _iface.has4);\n\t\t}\n\n\t\tif (cached.length === 0) {\n\t\t\tconst error = new Error(`cacheableLookup ENOTFOUND ${hostname}`);\n\t\t\terror.code = 'ENOTFOUND';\n\t\t\terror.hostname = hostname;\n\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (options.all) {\n\t\t\treturn cached;\n\t\t}\n\n\t\treturn cached[0];\n\t}\n\n\tasync query(hostname) {\n\t\tlet source = 'cache';\n\t\tlet cached = await this._cache.get(hostname);\n\n\t\tif (cached) {\n\t\t\tthis.stats.cache++;\n\t\t}\n\n\t\tif (!cached) {\n\t\t\tconst pending = this._pending[hostname];\n\t\t\tif (pending) {\n\t\t\t\tthis.stats.cache++;\n\t\t\t\tcached = await pending;\n\t\t\t} else {\n\t\t\t\tsource = 'query';\n\t\t\t\tconst newPromise = this.queryAndCache(hostname);\n\t\t\t\tthis._pending[hostname] = newPromise;\n\t\t\t\tthis.stats.query++;\n\t\t\t\ttry {\n\t\t\t\t\tcached = await newPromise;\n\t\t\t\t} finally {\n\t\t\t\t\tdelete this._pending[hostname];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcached = cached.map(entry => {\n\t\t\treturn {...entry, source};\n\t\t});\n\n\t\treturn cached;\n\t}\n\n\tasync _resolve(hostname) {\n\t\t// ANY is unsafe as it doesn't trigger new queries in the underlying server.\n\t\tconst [A, AAAA] = await Promise.all([\n\t\t\tignoreNoResultErrors(this._resolve4(hostname, ttl)),\n\t\t\tignoreNoResultErrors(this._resolve6(hostname, ttl))\n\t\t]);\n\n\t\tlet aTtl = 0;\n\t\tlet aaaaTtl = 0;\n\t\tlet cacheTtl = 0;\n\n\t\tconst now = Date.now();\n\n\t\tfor (const entry of A) {\n\t\t\tentry.family = 4;\n\t\t\tentry.expires = now + (entry.ttl * 1000);\n\n\t\t\taTtl = Math.max(aTtl, entry.ttl);\n\t\t}\n\n\t\tfor (const entry of AAAA) {\n\t\t\tentry.family = 6;\n\t\t\tentry.expires = now + (entry.ttl * 1000);\n\n\t\t\taaaaTtl = Math.max(aaaaTtl, entry.ttl);\n\t\t}\n\n\t\tif (A.length > 0) {\n\t\t\tif (AAAA.length > 0) {\n\t\t\t\tcacheTtl = Math.min(aTtl, aaaaTtl);\n\t\t\t} else {\n\t\t\t\tcacheTtl = aTtl;\n\t\t\t}\n\t\t} else {\n\t\t\tcacheTtl = aaaaTtl;\n\t\t}\n\n\t\treturn {\n\t\t\tentries: [\n\t\t\t\t...A,\n\t\t\t\t...AAAA\n\t\t\t],\n\t\t\tcacheTtl\n\t\t};\n\t}\n\n\tasync _lookup(hostname) {\n\t\ttry {\n\t\t\tconst [A, AAAA] = await Promise.all([\n\t\t\t\t// Passing {all: true} doesn't return all IPv4 and IPv6 entries.\n\t\t\t\t// See https://github.com/szmarczak/cacheable-lookup/issues/42\n\t\t\t\tignoreNoResultErrors(this._dnsLookup(hostname, all4)),\n\t\t\t\tignoreNoResultErrors(this._dnsLookup(hostname, all6))\n\t\t\t]);\n\n\t\t\treturn {\n\t\t\t\tentries: [\n\t\t\t\t\t...A,\n\t\t\t\t\t...AAAA\n\t\t\t\t],\n\t\t\t\tcacheTtl: 0\n\t\t\t};\n\t\t} catch {\n\t\t\treturn {\n\t\t\t\tentries: [],\n\t\t\t\tcacheTtl: 0\n\t\t\t};\n\t\t}\n\t}\n\n\tasync _set(hostname, data, cacheTtl) {\n\t\tif (this.maxTtl > 0 && cacheTtl > 0) {\n\t\t\tcacheTtl = Math.min(cacheTtl, this.maxTtl) * 1000;\n\t\t\tdata[kExpires] = Date.now() + cacheTtl;\n\n\t\t\ttry {\n\t\t\t\tawait this._cache.set(hostname, data, cacheTtl);\n\t\t\t} catch (error) {\n\t\t\t\tthis.lookupAsync = async () => {\n\t\t\t\t\tconst cacheError = new Error('Cache Error. Please recreate the CacheableLookup instance.');\n\t\t\t\t\tcacheError.cause = error;\n\n\t\t\t\t\tthrow cacheError;\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (isIterable(this._cache)) {\n\t\t\t\tthis._tick(cacheTtl);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync queryAndCache(hostname) {\n\t\tif (this._hostnamesToFallback.has(hostname)) {\n\t\t\treturn this._dnsLookup(hostname, all);\n\t\t}\n\n\t\tlet query = await this._resolve(hostname);\n\n\t\tif (query.entries.length === 0 && this._dnsLookup) {\n\t\t\tquery = await this._lookup(hostname);\n\n\t\t\tif (query.entries.length !== 0 && this.fallbackDuration > 0) {\n\t\t\t\t// Use `dns.lookup(...)` for that particular hostname\n\t\t\t\tthis._hostnamesToFallback.add(hostname);\n\t\t\t}\n\t\t}\n\n\t\tconst cacheTtl = query.entries.length === 0 ? this.errorTtl : query.cacheTtl;\n\t\tawait this._set(hostname, query.entries, cacheTtl);\n\n\t\treturn query.entries;\n\t}\n\n\t_tick(ms) {\n\t\tconst nextRemovalTime = this._nextRemovalTime;\n\n\t\tif (!nextRemovalTime || ms < nextRemovalTime) {\n\t\t\tclearTimeout(this._removalTimeout);\n\n\t\t\tthis._nextRemovalTime = ms;\n\n\t\t\tthis._removalTimeout = setTimeout(() => {\n\t\t\t\tthis._nextRemovalTime = false;\n\n\t\t\t\tlet nextExpiry = Infinity;\n\n\t\t\t\tconst now = Date.now();\n\n\t\t\t\tfor (const [hostname, entries] of this._cache) {\n\t\t\t\t\tconst expires = entries[kExpires];\n\n\t\t\t\t\tif (now >= expires) {\n\t\t\t\t\t\tthis._cache.delete(hostname);\n\t\t\t\t\t} else if (expires < nextExpiry) {\n\t\t\t\t\t\tnextExpiry = expires;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (nextExpiry !== Infinity) {\n\t\t\t\t\tthis._tick(nextExpiry - now);\n\t\t\t\t}\n\t\t\t}, ms);\n\n\t\t\t/* istanbul ignore next: There is no `timeout.unref()` when running inside an Electron renderer */\n\t\t\tif (this._removalTimeout.unref) {\n\t\t\t\tthis._removalTimeout.unref();\n\t\t\t}\n\t\t}\n\t}\n\n\tinstall(agent) {\n\t\tverifyAgent(agent);\n\n\t\tif (kCacheableLookupCreateConnection in agent) {\n\t\t\tthrow new Error('CacheableLookup has been already installed');\n\t\t}\n\n\t\tagent[kCacheableLookupCreateConnection] = agent.createConnection;\n\t\tagent[kCacheableLookupInstance] = this;\n\n\t\tagent.createConnection = (options, callback) => {\n\t\t\tif (!('lookup' in options)) {\n\t\t\t\toptions.lookup = this.lookup;\n\t\t\t}\n\n\t\t\treturn agent[kCacheableLookupCreateConnection](options, callback);\n\t\t};\n\t}\n\n\tuninstall(agent) {\n\t\tverifyAgent(agent);\n\n\t\tif (agent[kCacheableLookupCreateConnection]) {\n\t\t\tif (agent[kCacheableLookupInstance] !== this) {\n\t\t\t\tthrow new Error('The agent is not owned by this CacheableLookup instance');\n\t\t\t}\n\n\t\t\tagent.createConnection = agent[kCacheableLookupCreateConnection];\n\n\t\t\tdelete agent[kCacheableLookupCreateConnection];\n\t\t\tdelete agent[kCacheableLookupInstance];\n\t\t}\n\t}\n\n\tupdateInterfaceInfo() {\n\t\tconst {_iface} = this;\n\n\t\tthis._iface = getIfaceInfo();\n\n\t\tif ((_iface.has4 && !this._iface.has4) || (_iface.has6 && !this._iface.has6)) {\n\t\t\tthis._cache.clear();\n\t\t}\n\t}\n\n\tclear(hostname) {\n\t\tif (hostname) {\n\t\t\tthis._cache.delete(hostname);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._cache.clear();\n\t}\n}\n"],
  "mappings": "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",
  "names": ["dnsPromises", "os", "dnsLookup"]
}
